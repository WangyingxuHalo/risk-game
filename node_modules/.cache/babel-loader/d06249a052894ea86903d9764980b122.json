{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      var getIntersectionVisibleArea = function getIntersectionVisibleArea(offsetX, offsetY) {\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, visibleArea.left);\n        var visibleT = Math.max(t, visibleArea.top);\n        var visibleR = Math.min(r, visibleArea.right);\n        var visibleB = Math.min(b, visibleArea.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      };\n      var syncNextPopupPosition = function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      };\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleArea = placementInfo.htmlRegion === 'scroll' ?\n      // Scroll region should take scrollLeft & scrollTop into account\n      {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      } : {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      visibleArea = getVisibleArea(visibleArea, scrollerList);\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _ref = offset || [],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        popupOffsetX = _ref2$ === void 0 ? 0 : _ref2$,\n        _ref2$2 = _ref2[1],\n        popupOffsetY = _ref2$2 === void 0 ? 0 : _ref2$2;\n      var _ref3 = targetOffset || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        _ref4$ = _ref4[0],\n        targetOffsetX = _ref4$ === void 0 ? 0 : _ref4$,\n        _ref4$2 = _ref4[1],\n        targetOffsetY = _ref4$2 === void 0 ? 0 : _ref4$2;\n      targetRect.x += targetOffsetX;\n      targetRect.y += targetOffsetY;\n\n      // Points\n      var _ref5 = placementInfo.points || [],\n        _ref6 = _slicedToArray(_ref5, 2),\n        popupPoint = _ref6[0],\n        targetPoint = _ref6[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && nextPopupBottom > visibleArea.bottom) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && nextPopupY < visibleArea.top) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && nextPopupRight > visibleArea.right) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && nextPopupX < visibleArea.left) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","isDOM","isVisible","useEvent","useLayoutEffect","React","collectScroller","getVisibleArea","getWin","toNum","splitPoints","points","arguments","length","undefined","getAlignPoint","rect","topBottom","leftRight","x","y","height","width","reversePoints","index","reverseMap","t","b","l","r","map","point","i","join","useAlign","open","popupEle","target","placement","builtinPlacements","popupAlign","onPopupAlign","_React$useState","useState","ready","offsetX","offsetY","arrowX","arrowY","scaleX","scaleY","align","_React$useState2","offsetInfo","setOffsetInfo","alignCountRef","useRef","scrollerList","useMemo","onAlign","getIntersectionVisibleArea","popupRect","popupWidth","popupHeight","visibleL","Math","max","visibleArea","left","visibleT","top","visibleR","min","right","visibleB","bottom","syncNextPopupPosition","nextPopupY","nextOffsetY","nextPopupBottom","nextPopupX","nextOffsetX","nextPopupRight","popupElement","originLeft","style","originTop","doc","ownerDocument","win","placementInfo","targetRect","Array","isArray","getBoundingClientRect","_win$getComputedStyle","getComputedStyle","_doc$documentElement","documentElement","clientWidth","clientHeight","scrollWidth","scrollHeight","scrollTop","scrollLeft","targetHeight","targetWidth","htmlRegion","_scaleX","round","parseFloat","_scaleY","offset","targetOffset","_ref","_ref2","_ref2$","popupOffsetX","_ref2$2","popupOffsetY","_ref3","_ref4","_ref4$","targetOffsetX","_ref4$2","targetOffsetY","_ref5","_ref6","popupPoint","targetPoint","targetPoints","popupPoints","targetAlignPoint","popupAlignPoint","nextAlignInfo","originIntersectionVisibleArea","targetAlignPointTL","popupAlignPointTL","targetAlignPointBR","popupAlignPointBR","overflow","adjustX","adjustY","shiftX","shiftY","supportAdjust","val","needAdjustY","sameTB","tmpNextOffsetY","_tmpNextOffsetY","needAdjustX","sameLR","tmpNextOffsetX","_tmpNextOffsetX","numShiftX","numShiftY","popupLeft","popupRight","popupTop","popupBottom","targetLeft","targetRight","targetTop","targetBottom","maxLeft","minRight","xCenter","nextArrowX","maxTop","minBottom","yCenter","nextArrowY","triggerAlign","current","id","Promise","resolve","then","resetReady","ori"],"sources":["/Users/wangyingxu/Desktop/duke/651project/prev version/risk-team4-front-end/node_modules/@rc-component/trigger/es/hooks/useAlign.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleArea = placementInfo.htmlRegion === 'scroll' ?\n      // Scroll region should take scrollLeft & scrollTop into account\n      {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      } : {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      visibleArea = getVisibleArea(visibleArea, scrollerList);\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _ref = offset || [],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        popupOffsetX = _ref2$ === void 0 ? 0 : _ref2$,\n        _ref2$2 = _ref2[1],\n        popupOffsetY = _ref2$2 === void 0 ? 0 : _ref2$2;\n      var _ref3 = targetOffset || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        _ref4$ = _ref4[0],\n        targetOffsetX = _ref4$ === void 0 ? 0 : _ref4$,\n        _ref4$2 = _ref4[1],\n        targetOffsetY = _ref4$2 === void 0 ? 0 : _ref4$2;\n      targetRect.x += targetOffsetX;\n      targetRect.y += targetOffsetY;\n\n      // Points\n      var _ref5 = placementInfo.points || [],\n        _ref6 = _slicedToArray(_ref5, 2),\n        popupPoint = _ref6[0],\n        targetPoint = _ref6[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, visibleArea.left);\n        var visibleT = Math.max(t, visibleArea.top);\n        var visibleR = Math.min(r, visibleArea.right);\n        var visibleB = Math.min(b, visibleArea.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && nextPopupBottom > visibleArea.bottom) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && nextPopupY < visibleArea.top) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && nextPopupRight > visibleArea.right) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && nextPopupX < visibleArea.left) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}