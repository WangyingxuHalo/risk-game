{"ast":null,"code":"var _jsxFileName = \"/Users/wangyingxu/Desktop/duke/651project/prev version/risk-team4-front-end/src/components/GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HtmlTooltip = styled(_ref => {\n  let {\n    className,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    ...props,\n    classes: {\n      popper: className\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9'\n    }\n  };\n});\nconst GameBoard = props => {\n  _s();\n  const [territories, setTerritories] = useState([]);\n  const [lines, setLines] = useState([]);\n  React.useEffect(() => {\n    setTerritories(props.territories);\n    setLines(props.lines);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"game-board-background\",\n    children: [lines.map((line, lineIdx) => {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.x1,\n          y1: line.y1,\n          x2: line.x2,\n          y2: line.y2,\n          stroke: \"black\",\n          strokeWidth: 2\n        }, lineIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: (line.x1 + line.x2) / 2,\n          y: (line.y1 + line.y2) / 2,\n          strokeWidth: \"1px\",\n          style: {\n            fontSize: 15\n          },\n          children: line.distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, lineIdx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    }), territories.map((territory, territoryIdx) => {\n      const tooltips = \"Territory Name: \" + territory.territoryName + \"<br />\" + \"Food Generation Rate: \" + territory.foodGene + \"\\n\";\n      return /*#__PURE__*/_jsxDEV(HtmlTooltip, {\n        arrow: true,\n        title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"inherit\",\n            children: territory.territoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Food Generation Rate: \", territory.foodGene, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Tech Generation Rate: \", territory.techGene, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Unit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Level\\xA0\\xA0\\xA0Num \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), territory.units.map((eachUnit, unitIdx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\xA0\", eachUnit.level, \"\\xA0\\xA0\\xA0-----\\xA0\\xA0\\xA0\", eachUnit.num]\n            }, unitIdx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 34\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: territory.cx,\n            cy: territory.cy,\n            r: territory.r,\n            fill: territory.color,\n            stroke: \"black\",\n            strokeWidth: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: territory.cx,\n            y: territory.cy,\n            strokeWidth: \"1px\",\n            alignmentBaseline: \"middle\",\n            textAnchor: \"middle\",\n            style: {\n              fontSize: 11\n            },\n            children: territory.territoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 22\n        }, this)\n      }, territoryIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(GameBoard, \"dMkEuv7zCTDLJzqSiymetd+E/94=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","Tooltip","tooltipClasses","styled","Typography","jsxDEV","_jsxDEV","HtmlTooltip","_ref","className","props","classes","popper","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","GameBoard","_s","territories","setTerritories","lines","setLines","useEffect","children","map","line","lineIdx","x1","y1","x2","y2","stroke","strokeWidth","x","y","style","distance","territory","territoryIdx","tooltips","territoryName","foodGene","arrow","title","Fragment","techGene","units","eachUnit","unitIdx","level","num","cx","cy","r","fill","alignmentBaseline","textAnchor","_c","$RefreshReg$"],"sources":["/Users/wangyingxu/Desktop/duke/651project/prev version/risk-team4-front-end/src/components/GameBoard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }));\n\nconst GameBoard = (props) => {\n    const [territories, setTerritories] = useState([]);\n    const [lines, setLines] = useState([]);\n\n    React.useEffect(() => {\n        setTerritories(props.territories);\n        setLines(props.lines);\n    }, [])\n\n    return (\n        <svg className=\"game-board-background\">\n            {lines.map((line, lineIdx) => {\n                return (\n                    <svg key={lineIdx}>\n                        <line key={lineIdx} x1={line.x1} y1={line.y1} x2={line.x2} y2={line.y2} stroke=\"black\" strokeWidth={2} />\n                        <text x={(line.x1 + line.x2) / 2} y={(line.y1 + line.y2) / 2} strokeWidth=\"1px\" style={{ fontSize: 15 }}>{line.distance}</text>\n                    </svg>)\n            })}\n            {territories.map((territory, territoryIdx) => {\n                const tooltips = \"Territory Name: \" + territory.territoryName + \"<br />\" +\n                    \"Food Generation Rate: \" + territory.foodGene + \"\\n\";\n                return (\n                <HtmlTooltip key={territoryIdx} arrow\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\">{territory.territoryName}</Typography>\n                        <p> Food Generation Rate: {territory.foodGene} </p>\n                        <p> Tech Generation Rate: {territory.techGene} </p>\n                        <p> Unit:</p>\n                        <p> Level&nbsp;&nbsp;&nbsp;Num </p>\n                        {territory.units.map((eachUnit, unitIdx) => {\n                          return(<div key={unitIdx}>&nbsp;{eachUnit.level}&nbsp;&nbsp;&nbsp;-----&nbsp;&nbsp;&nbsp;{eachUnit.num}</div>)\n                        })}\n                      </React.Fragment>\n                    }\n                  >\n                     <svg>\n                            <circle cx={territory.cx} cy={territory.cy} r={territory.r} fill={territory.color} stroke=\"black\" strokeWidth={2} />\n                            <text x={territory.cx} y={territory.cy} strokeWidth=\"1px\" alignmentBaseline=\"middle\" textAnchor=\"middle\" style={{ fontSize: 11 }}>{territory.territoryName}</text>\n                        </svg>\n                  </HtmlTooltip>\n                )\n            })}\n        </svg>\n    );\n};\n\nexport default GameBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}